---
import "../global.css";

// NOTE: Astro.glob is broken and includes assets from the glob'd files...
/* const tests = await Astro.glob("./tests/*.astro"); */

const tests = [
	{
		title: "Script Processor Node",
		url: "/web-audio-tests/tests/direct_spn/",
		kind: "direct",
	},
	{
		title: "Audio Worklet Node",
		url: "/web-audio-tests/tests/direct_worklet/",
		kind: "direct",
	},
	// buffered
	{
		title: "Script Processor Node",
		url: "/web-audio-tests/tests/queue_spn/",
		kind: "buffered",
	},
	{
		title: "Audio Worklet Node (Sync)",
		url: "/web-audio-tests/tests/queue_worklet/",
		kind: "buffered",
	},
	{
		title: "Audio Worklet Node (Atomic)",
		url: "/web-audio-tests/tests/queue_worklet_atomic/",
		kind: "buffered",
	},
];
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<title>Web Audio Tests</title>
	</head>
	<body>
		<div class="content">
			<h1>Audio Tests</h1>
			<h2>Direct Write</h2>
			<p>Write directly to the output buffer. There should be no stuttering or lag present.</p>
			<ul>
				{
					tests.filter((page) => page.kind === "direct").map((page) => (
						<li>
							<a href={page.url}>{page.title}</a>
						</li>
					))
				}
			</ul>

			<h2>Queued Write</h2>
			<p>Use a ring buffer to queue samples; dequeue when it needs to be read.</p>
			<ul>
				{
					tests.filter((page) => page.kind === "buffered").map((page) => (
						<li>
							<a href={page.url}>{page.title}</a>
						</li>
					))
				}
			</ul>
		</div>
		<script is:inline src="/web-audio-tests/coi-serviceworker.min.js"></script>
	</body>
</html>

